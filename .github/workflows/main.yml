# GitHub Actions Workflow is created for testing and preparing the plugin release in the following steps:
# - validate Gradle Wrapper,
# - run 'test' and 'verifyPlugin' tasks,
# - run Qodana inspections,
# - run 'buildPlugin' task and prepare artifact for the further tests,
# - run 'runPluginVerifier' task,
# - create a draft release.
#
# Workflow is triggered on push and pull_request events.
#
# GitHub Actions reference: https://help.github.com/en/actions
#
## JBIJPPTPL

name: Build
on:
  # Trigger the workflow on pushes to only the 'main' branch (this avoids duplicate checks being run e.g. for dependabot pull requests)
  push:
    branches: [develop]
  # Trigger the workflow on any pull request
  pull_request:
  repository_dispatch:
    types: [build]

jobs:

  # Run Gradle Wrapper Validation Action to verify the wrapper's checksum
  # Run verifyPlugin, IntelliJ Plugin Verifier, and test Gradle tasks
  # Build plugin and provide the artifact for the next workflow jobs
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      # Free GitHub Actions Environment Disk Space
      - name: Maximize Build Space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
          cache: gradle
        
      # build edql repository
      - name: Build library
        id: edql-lib
        shell: bash
        run: |
          ./gradlew --info --no-daemon :modules:core:publishToMavenLocal
          ./gradlew --info --no-daemon :modules:script:publishToMavenLocal
          ./gradlew --info --no-daemon :publishToMavenLocal
          ls -al ~/.m2/repository/com/github/chengpohi

      # Check out current repository
      - name: Fetch plugin Sources
        uses: actions/checkout@v3
        with:
          repository: chengpohi/edql-idea-plugin
          ref: develop
          token: ${{ secrets.GH_PAT }}
          path: 'idea-plugin'

      - name: Build plugin
        id: edql-plugin
        shell: bash
        run: |
          cd idea-plugin && ENV=CI ./gradlew buildPlugin
          ls -lh build/distributions/*
          cd ..
          
      # Prepare plugin archive content for creating artifact
      - name: Prepare Plugin Artifact
        id: artifact
        shell: bash
        run: |
          cd ${{ github.workspace }}/idea-plugin/build/distributions
          FILENAME=`ls *.zip`
          unzip "$FILENAME" -d content
          echo "filename=${FILENAME:0:-4}" >> $GITHUB_OUTPUT
      # Store already-built plugin as an artifact for downloading
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ./idea-plugin/build/distributions/content/*/*
